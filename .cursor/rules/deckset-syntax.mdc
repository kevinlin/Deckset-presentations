---
description: Guide to Deckset markdown syntax and supported features
alwaysApply: false
---
# Deckset Markdown Syntax Guide

This project supports comprehensive **Deckset-compatible markdown syntax** for creating presentations.

## Slide Structure

### Slide Separators
- Use `---` on a blank line to separate slides
- Automatic slide breaks supported via `slide-dividers` global command
- Example: `slide-dividers: #, ##, ###` breaks at heading levels

### Global Commands (at file top)
```markdown
theme: Zurich
autoscale: true
slidenumbers: false  
footer: My Presentation Footer
build-lists: true
slide-transition: fade
code-language: python
fit-headers: #, ##
slide-dividers: #, ##, ###
```

### Slide-Specific Commands
```markdown
[.background-image: image.jpg]
[.hide-footer]
[.hide-slide-numbers]
[.autoscale: true]
[.slide-transition: slide]
[.column]  # Start column layout
```

## Content Features

### Headers with Fit Modifier
```markdown
# [fit] Large Heading
## [fit] Medium Heading
```

### Speaker Notes
```markdown
^ This is a speaker note
^ Multi-line speaker notes
^ are supported
```

### Image Modifiers
```markdown
![background](image.jpg)           # Background image
![inline](image.jpg)               # Inline image  
![left](image.jpg)                 # Left-aligned
![right](image.jpg)                # Right-aligned
![fit](image.jpg)                  # Fit to slide
![fill](image.jpg)                 # Fill slide
![75%](image.jpg)                  # Specific size
![filtered](image.jpg)             # Apply filter
![original](image.jpg)             # No processing
```

### Code Highlighting
````markdown
[.code-highlight: 1,3-5]
```python
def hello_world():
    print("Hello, World!")  
    return True
```
````

### Math Support
```markdown
Inline math: $x = y + z$

Display math:
$$E = mc^2$$
```

### Footnotes
```markdown
Text with footnote[^1]

[^1]: This is the footnote content
```

### Emoji Shortcodes
```markdown
:smile: :heart: :thumbsup:
```

## Processing Implementation

- **Parser**: [deckset_parser.py](mdc:deckset_parser.py) handles all syntax parsing
- **Slide Processing**: [slide_processor.py](mdc:slide_processor.py) manages slide content
- **Media Processing**: [media_processor.py](mdc:media_processor.py) handles images/media
- **Code Processing**: [code_processor.py](mdc:code_processor.py) manages syntax highlighting
- **Math Processing**: [math_processor.py](mdc:math_processor.py) handles LaTeX expressions

## Testing

See examples in:
- [Examples/](mdc:Examples/) directory for reference presentations
- [tests/test_deckset_parser.py](mdc:tests/test_deckset_parser.py) for syntax tests
- Individual presentation folders (01-fix-messaging/, 02-powerpoint-karaoke/, etc.)
description:
globs:
alwaysApply: false
---
